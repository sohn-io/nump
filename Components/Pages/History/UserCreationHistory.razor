@page "/history/user/creation/{TaskRunId:guid}"
@inject NavigationManager _Nav
@inject NumpContext _context
@inject DialogService DialogService
<RadzenRow>
    <RadzenText TextStyle="TextStyle.DisplayH4" Text="User Creation History" />
    <RadzenDataGrid Data="@userLogs" TItem="UserCreationLog" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.CheckBoxList" AllowColumnReorder="true" AllowColumnResize="true">
        <Columns>
            <RadzenDataGridColumn TItem="UserCreationLog" Property="DateTime" Title="Date/Time" />
            <RadzenDataGridColumn TItem="UserCreationLog" Property="UserName" Title="User"  />
            <RadzenDataGridColumn TItem="UserCreationLog" Property="Result" Title="Creation Status" />
            <RadzenDataGridColumn TItem="UserCreationLog" Property="Reason" Title="Fail Reason" />
            <RadzenDataGridColumn TItem="UserCreationLog" Property="CreationDN" Title="Creation DN" />
            <RadzenDataGridColumn TItem="UserCreationLog" Title="CSV" Filterable="false">
                <Template Context="userLog">
                    @if (userLog.csvUserObject != null)
                    {
                        <RadzenButton Text="View CSV Data" Variant="Variant.Text" Click="@(() => ViewCSVData(userLog))" />
                    }
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenRow>
@code {
    [Parameter] public Guid? TaskRunId { get; set; }

    private List<UserCreationLog> userLogs = new List<UserCreationLog>();
    protected override async Task OnInitializedAsync()
    {
        if (TaskRunId == null)
        {
            _Nav.NavigateTo("/");
        }
        userLogs = await _context.UserCreationLogs.Where(x => x.RunId == TaskRunId).OrderByDescending(x =>
        x.DateTime).ToListAsync();
    }
    void ViewCSVData(UserCreationLog userLog)
    {
        if (userLog.csvUserObject == null)
        {
            return;
        }
        DialogService.Open<CSVDataDialog>("CSV Data", new Dictionary<string, object>() { { "CSVData", userLog._csvObject } },
        new DialogOptions() { Width = "800px", CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, });
    }
}