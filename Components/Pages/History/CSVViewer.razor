@page "/viewcsv"

<table>
    <thead style="position: sticky; top: 0; z-index: 1;">
        <tr style="position: sticky; top: 0; background-color: var(--rz-card-background-color); padding: 10px;">
            @foreach (var header in CsvHeadersWithColor)
            {
            string style = "color: " + header.Value + "; padding: 0 5px;";
            <th style="@style">@header.Key</th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var row in CsvData.Values)
        {
            <tr>
            @foreach (var header in CsvHeadersWithColor)
            {
                string style = "color: " + header.Value + "; padding: 0 5px;";
                <td style="@style">@row[header.Key]</td>
            }
            </tr>
        }
        </tbody>
    </table>

    @code {
        [Parameter]
        public Dictionary<int, Dictionary<string, object>> CsvData { get; set; }

        [Parameter]
        public List<string> CsvHeaders { get; set; }

        public Dictionary<string, string> CsvHeadersWithColor = new Dictionary<string, string>();

        List<string> colors = new List<string>
        {
            "#FF0000", "#FF3B00", "#FF6600", "#FF9900", "#FFCC00", "#FFFF00", 
            "#B3FF00", "#66FF00", "#00FF00", "#00FF33", "#00FF66", "#00FF99", 
            "#00FFCC", "#00FFFF", "#00B3FF", "#0066FF", "#0033FF", "#0000FF", 
            "#3300FF", "#6600FF", "#9900FF", "#CC00FF", "#FF00FF", "#FF00CC", 
            "#FF0099", "#FF0066", "#FF0033", "#FF0000", "#FF3300", "#FF6600"
        };

        Random random = new Random();


        private string SelectRandomColor(int index)
        {
            index = index % colors.Count;
            return colors[index];
        }
    

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        int i = 0;
        foreach (var row in CsvHeaders)
        {
            CsvHeadersWithColor.Add(row, SelectRandomColor(i));
            i++;
        }
    }
}  
