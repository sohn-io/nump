
@inject DialogService dialogService

<RadzenFormField Variant="Variant.Outlined" style="box-sizing: border-box; margin-left: 16px; width: calc(100% - 32px);" class="rz-mb-4">
    <Start>
        <RadzenIcon Icon="search" />
    </Start>
    <ChildContent>
        <RadzenTextBox @bind-Value="@searchValue" @oninput=@Search />
    </ChildContent>
</RadzenFormField>

<RadzenDataList Data="@ViewableOUs" AllowPaging=true PageSize="10" style="padding: 0 !important;" class="nopadding-data-list" >
    <Template>
        <div @onclick="(() => SubmitSelection(context))" style="cursor: pointer; border: 1px solid transparent; border-radius: 4px; overflow-x:hidden;" class="clickable-div">
        <RadzenStack Orientation="Orientation.Vertical" Gap="0" class="rz-p-5">
            <RadzenText TextStyle="TextStyle.DisplayH6">@context.Name</RadzenText>
            <RadzenText TextStyle="TextStyle.Overline">@context.CanonicalName</RadzenText>
        </RadzenStack>
        </div>
    </Template>

</RadzenDataList>
@code {
    [Parameter]
    public HashSet<ADObjectMap> OUs {get; set;}
    
    public HashSet<ADObjectMap> ViewableOUs {get; set;}
    [Parameter] public EventCallback<ADObjectMap> OnSelectedValue { get; set; }

        string searchValue;

    private void SubmitSelection(ADObjectMap selectedOption)
    {
        dialogService.Close(selectedOption);
    }
    private void Search(ChangeEventArgs e)
    {
        searchValue = e.Value as string;
        if (searchValue == null | searchValue == "")
        {
            ViewableOUs = OUs;
        }
        ViewableOUs = OUs.Where(x => x.Name.Contains(searchValue, StringComparison.OrdinalIgnoreCase)).ToHashSet<ADObjectMap>();

    }
    protected override async Task OnInitializedAsync()
    {
        ViewableOUs = OUs.OrderBy(x => x.Name).ToHashSet<ADObjectMap>();
    }
}